set $mod Mod4

# Remove title bar
for_window [class="^.*"] border pixel 0

# You Want The Gaps
smart_gaps on
gaps inner 15
gaps outer 15

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
font pango:monospace 14

# This font is widely installed, provides lots of unicode glyphs, right-to-left
# text rendering and scalability on retina/hidpi displays (thanks to pango).
# font pango:DejaVu Sans Mono 8

# Before i3 v4.8, we used to recommend this one as the default:
# font -misc-fixed-medium-r-normal--13-120-75-75-C-70-iso10646-1
# The font above is very space-efficient, that is, it looks good, sharp and
# clear in small sizes. However, its unicode glyph coverage is limited, the old
# X core fonts rendering does not support right-to-left and this being a bitmap
# font, it doesn’t scale on retina/hidpi displays.

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# start a terminal (This is so I can use rvm)
bindsym $mod+Return exec "termite --exec='/bin/bash --login'"

# kill focused window
bindsym $mod+Shift+q kill

# start dmenu (a program launcher)
# bindsym $mod+d exec dmenu_run
# There also is the (new) i3-dmenu-desktop which only displays applications
# shipping a .desktop file. It is a wrapper around dmenu, so you need that
# installed.
# bindsym $mod+d exec --no-startup-id i3-dmenu-desktop

xwayland disabled

# Pulse Audio controls
bindsym XF86AudioRaiseVolume exec pactl set-sink-volume $(pacmd list-sinks |awk '/* index:/{print $3}') +5% #increase sound volume
bindsym XF86AudioLowerVolume exec pactl set-sink-volume $(pacmd list-sinks |awk '/* index:/{print $3}') -5% #decrease sound volume
bindsym XF86AudioMute exec pactl set-sink-mute $(pacmd list-sinks |awk '/* index:/{print $3}') toggle # mute sound

# BrightNess
bindsym XF86MonBrightnessDown exec brightnessctl set 5%-
bindsym XF86MonBrightnessUp exec brightnessctl set +5%

# Media player controls
bindsym XF86AudioPlay exec playerctl play
bindsym XF86AudioPause exec playerctl pause
bindsym XF86AudioNext exec playerctl next
bindsym XF86AudioPrev exec playerctl previous

# change focus
bindsym $mod+j focus left
bindsym $mod+k focus down
bindsym $mod+l focus up
bindsym $mod+semicolon focus right

# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+j move left
bindsym $mod+Shift+k move down
bindsym $mod+Shift+l move up
bindsym $mod+Shift+semicolon move right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# split in horizontal orientation
bindsym $mod+h split h

# split in vertical orientation
bindsym $mod+v split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent

# focus the child container
# bindsym $mod+d focus child

# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.
set $ws1 "1"
set $ws2 "2"
set $ws3 "3"
set $ws4 "4"
set $ws5 "5"
set $ws6 "6"
set $ws7 "7"
set $ws8 "8"
set $ws9 "9"
set $ws10 "10"

# switch to workspace
bindsym $mod+1 workspace $ws1
bindsym $mod+2 workspace $ws2
bindsym $mod+3 workspace $ws3
bindsym $mod+4 workspace $ws4
bindsym $mod+5 workspace $ws5
bindsym $mod+6 workspace $ws6
bindsym $mod+7 workspace $ws7
bindsym $mod+8 workspace $ws8
bindsym $mod+9 workspace $ws9
bindsym $mod+0 workspace $ws10

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace $ws1
bindsym $mod+Shift+2 move container to workspace $ws2
bindsym $mod+Shift+3 move container to workspace $ws3
bindsym $mod+Shift+4 move container to workspace $ws4
bindsym $mod+Shift+5 move container to workspace $ws5
bindsym $mod+Shift+6 move container to workspace $ws6
bindsym $mod+Shift+7 move container to workspace $ws7
bindsym $mod+Shift+8 move container to workspace $ws8
bindsym $mod+Shift+9 move container to workspace $ws9
bindsym $mod+Shift+0 move container to workspace $ws10

# reload the configuration file
bindsym $mod+Shift+c reload

set $mode_system System (s) suspend, (h) hibernate, (r) reboot, (z) shutdown
mode "$mode_system" {
  bindsym s exec --no-startup-id $Locker && systemctl suspend, mode "default"
  bindsym h exec --no-startup-id $Locker && systemctl hibernate, mode "default"
  bindsym r exec --no-startup-id systemctl reboot, mode "default"
  bindsym z exec --no-startup-id systemctl poweroff -i, mode "default"

  # back to normal: Enter or Escape
  bindsym Return mode "default"
  bindsym Escape mode "default"
}

bindsym $mod+x mode "$mode_system"

# resize window (you can also use the mouse for that)
mode "resize" {
  # These bindings trigger as soon as you enter the resize mode

  # Pressing left will shrink the window’s width.
  # Pressing right will grow the window’s width.
  # Pressing up will shrink the window’s height.
  # Pressing down will grow the window’s height.
  bindsym j resize shrink width 10 px or 10 ppt
  bindsym k resize grow height 10 px or 10 ppt
  bindsym l resize shrink height 10 px or 10 ppt
  bindsym semicolon resize grow width 10 px or 10 ppt

  # same bindings, but for the arrow keys
  bindsym Left resize shrink width 10 px or 10 ppt
  bindsym Down resize grow height 10 px or 10 ppt
  bindsym Up resize shrink height 10 px or 10 ppt
  bindsym Right resize grow width 10 px or 10 ppt

  # back to normal: Enter or Escape or $mod+r
  bindsym Return mode "default"
  bindsym Escape mode "default"
  bindsym $mod+r mode "default"
}

bindsym $mod+r mode "resize"

# Start polybar to display a workspace bar (plus the system information i3status
# finds out, if available)
# bar {
#   position top
#   colors {
#     separator #268bd2
#     background #002b36
#     statusline #839496
#     focused_workspace #fdf6e3 #ff00ff #fdf6e3
#     active_workspace #fdf6e3 #ff00ff #fdf6e3
#     inactive_workspace #002b36 #586e75 #002b36
#     urgent_workspace #d33682 #d33682 #fdf6e3
#   }
# }
client.focused #ff00ff #ff00ff #fdf6e3 #fdf6e3 #ff00ff
client.focused_inactive #073642 #073642 #eee8d5 #6c71c4 #073642
client.unfocused #073642 #073642 #93a1a1 #586e75 #073642
client.urgent #d33682 #d33682 #fdf6e3 #dc322f #d33682

# start keepassx
bindsym $mod+p exec QT_QPA_PLATFORM=xcb ~/storage/keepassx/build/src/keepassx

# start bluefish text editor
bindsym $mod+c exec /usr/local/src/sublime_text_3/sublime_text

# start firefox
bindsym $mod+Shift+f exec firefox

# start steam
bindsym $mod+Shift+s exec SDL_VIDEODRIVER=x steam

# open up folder nautilus
bindsym $mod+z exec nautilus

# Exit Sway bindings
bindsym $mod+Shift+m exec sway exit

set $mode_gaps Gaps: (o)uter, (i)nner, (h)orizontal, (v)ertical, (t)op, (r)ight, (b)ottom, (l)eft
set $mode_gaps_outer Outer Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_inner Inner Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_horiz Horizontal Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_verti Vertical Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_top Top Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_right Right Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_bottom Bottom Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_left Left Gaps: +|-|0 (local), Shift + +|-|0 (global)
bindsym $mod+Shift+g mode "$mode_gaps"

mode "$mode_gaps" {
  bindsym o      mode "$mode_gaps_outer"
  bindsym i      mode "$mode_gaps_inner"
  bindsym h      mode "$mode_gaps_horiz"
  bindsym v      mode "$mode_gaps_verti"
  bindsym t      mode "$mode_gaps_top"
  bindsym r      mode "$mode_gaps_right"
  bindsym b      mode "$mode_gaps_bottom"
  bindsym l      mode "$mode_gaps_left"
  bindsym Return mode "$mode_gaps"
  bindsym Escape mode "default"
}

mode "$mode_gaps_outer" {
  bindsym plus  gaps outer current plus 5
  bindsym minus gaps outer current minus 5
  bindsym 0     gaps outer current set 0

  bindsym Shift+plus  gaps outer all plus 5
  bindsym Shift+minus gaps outer all minus 5
  bindsym Shift+0     gaps outer all set 0

  bindsym Return mode "$mode_gaps"
  bindsym Escape mode "default"
}

mode "$mode_gaps_inner" {
  bindsym plus  gaps inner current plus 5
  bindsym minus gaps inner current minus 5
  bindsym 0     gaps inner current set 0

  bindsym Shift+plus  gaps inner all plus 5
  bindsym Shift+minus gaps inner all minus 5
  bindsym Shift+0     gaps inner all set 0

  bindsym Return mode "$mode_gaps"
  bindsym Escape mode "default"
}

mode "$mode_gaps_horiz" {
  bindsym plus  gaps horizontal current plus 5
  bindsym minus gaps horizontal current minus 5
  bindsym 0     gaps horizontal current set 0

  bindsym Shift+plus  gaps horizontal all plus 5
  bindsym Shift+minus gaps horizontal all minus 5
  bindsym Shift+0     gaps horizontal all set 0

  bindsym Return mode "$mode_gaps"
  bindsym Escape mode "default"
}

mode "$mode_gaps_verti" {
  bindsym plus  gaps vertical current plus 5
  bindsym minus gaps vertical current minus 5
  bindsym 0     gaps vertical current set 0

  bindsym Shift+plus  gaps vertical all plus 5
  bindsym Shift+minus gaps vertical all minus 5
  bindsym Shift+0     gaps vertical all set 0

  bindsym Return mode "$mode_gaps"
  bindsym Escape mode "default"
}

mode "$mode_gaps_top" {
  bindsym plus  gaps top current plus 5
  bindsym minus gaps top current minus 5
  bindsym 0     gaps top current set 0

  bindsym Shift+plus  gaps top all plus 5
  bindsym Shift+minus gaps top all minus 5
  bindsym Shift+0     gaps top all set 0

  bindsym Return mode "$mode_gaps"
  bindsym Escape mode "default"
}

mode "$mode_gaps_right" {
  bindsym plus  gaps right current plus 5
  bindsym minus gaps right current minus 5
  bindsym 0     gaps right current set 0

  bindsym Shift+plus  gaps right all plus 5
  bindsym Shift+minus gaps right all minus 5
  bindsym Shift+0     gaps right all set 0

  bindsym Return mode "$mode_gaps"
  bindsym Escape mode "default"
}

mode "$mode_gaps_bottom" {
  bindsym plus  gaps bottom current plus 5
  bindsym minus gaps bottom current minus 5
  bindsym 0     gaps bottom current set 0

  bindsym Shift+plus  gaps bottom all plus 5
  bindsym Shift+minus gaps bottom all minus 5
  bindsym Shift+0     gaps bottom all set 0

  bindsym Return mode "$mode_gaps"
  bindsym Escape mode "default"
}

mode "$mode_gaps_left" {
  bindsym plus  gaps left current plus 5
  bindsym minus gaps left current minus 5
  bindsym 0     gaps left current set 0

  bindsym Shift+plus  gaps left all plus 5
  bindsym Shift+minus gaps left all minus 5
  bindsym Shift+0     gaps left all set 0

  bindsym Return mode "$mode_gaps"
  bindsym Escape mode "default"
}

output "*" background /home/vince/Pictures/4k-jinx.jpg fill scale 2
